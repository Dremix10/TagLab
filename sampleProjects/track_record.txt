Model1:
-> used hand-labelled initial pic1 to train model1 (test_ds_1)
-> used model1 to label OVER pic1
-> labels were big and all over the place resulting to an overall fail

Model2:
-> used hand-labelled initial pic1 to train model2 (test_ds_2_vertical)
-> used model2 to label empty pic2
-> tree labelling failled but car labelling was very good
-> refined and cleaned labelling, leaving only cars (grouped cars labelled as 1)

Model3:
-> used refined labelled pic2 to train model3 (hd_ds_1_vertical)
-> used model3 to label empty pic3
-> car labelling was not that good with a lot of inaccuracies

Model4:
-> refined and labelled all cars of pic1 (some in groups)
-> used refined hand-labelled pic1 to train model4 (test_ds_3_vertical)
-> used model4 to label empty pic4
-> car labelling was fairly good but with inaccuracies
-> used model2 to label empty pic4
-> car labelling was better than model4 but trees messed it up

Model5:
-> refined pic4 model2 labelling and used that to train model5 (test_ds_4_vertical)
-> used models 2,4,5 to label empty pic1 (separately)
-> model 2 is better by far, only flaw is that it has trees aswell which messes it up
-> it seems that grouped cars worsen the model as model2 was trained on single cars only
-> used model 2 to label empty pic5
-> we can clearly see that labelling of single cars is very good with that model

Plan:
-> fix hand_labelled_pic1 to include no groups and train new model on that but with
more epochs/batch to replicate a better model2
-> use that to label many images and then create a large ds to train a new model
that will also include grouped cars but with alot more input data to see how that performs

Model6:
-> added (almost) all cars of pic1 hand-labelled without groups
-> used that to train model6 (beta_ds_1_v), v stands for vertical split
-> used model 6 to label empty pics 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
-> results at a glance look very promising, more detailed comparison/evaluation to be done
-> comparing pic 1, 4, 5 with models 2 and 6 we can see very similar results
-> both have slight inaccuracies, but are generally a very good starting point
-> refining/fixing to be done to all pictures labelled with model 6

Model7:
-> refined pic 1, 5, 6, 7, 8, 9 and included groups in them
-> used those pics to train model7 (big_ds_1)
-> used model 7 to label empty pic 1, 10
-> results look very disappointing
-> seeing how messed up the labelling is I believe that no-car-groups is the way to go

Model8:
-> fixed pic 1, 5, 7, 8, 9 to split all car-groups into single cars
-> used those pics to train model8 (big_ds_2)
-> while waiting I refined and fixed (removed all car groups) pic 10
-> used model 8 to label empty pic 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
-> also used model 2 to label empty pic 7
-> the results are not bad at all but I think the initial model2 was better
-> will try to replicate model2 (but with cars only) and create an actual comparison between the 2 models

Plan:
-> Stick to models6/8 (no car groups) and try to improve? add more objects?
-> Try to create a model using chosen pictures that have more full and close-up cars to train the model only on full cars (model2-like)

Model9:
-> restored pic1 labelling like it was when I created model2 and fixed some inaccuracies to only contain full cars
-> exported it as a dataset (model2_ds_replica) to train model9
-> predicted pic1 with it and that completely failed, maybe model2 was just lucky training
-> compared again model2 with model8 and the results are very similar, with model8 being more consistent (logical given the larger ds)

Decision:
-> model8-way seems the best, improve that by increasing ds and training more batch/epochs? start including other objects?
-> just test a small whole-car-only model to rule that out completely


Model10:
-> refined pics 7, 9, 10 to include whole-cars only
-> used those pics to train model10 (whole_ds_1)
-> predicted pic1 with it and the results aren't good, final decision is that we will go with the model8 way and start adding more objects

** back to groups_split.json project bcs the whole_cars.json test failed **

Model11:
-> started building big_ds_3 with the big_ds_2 as a foundation, the plan is to add more pictures and train at higher epochs/batch
-> this will create the final/best car-only model and then I will start adding trees and windows
-> refined/added pics 10, 13 onto big_ds_2
-> used model8 to predict pics 14, 15, 16 and then refined them
-> waiting to get more pics from Marios to integrate into big_ds_3
-> the pics were not fully completed and really similar to mine and had diff resolution
-> big_ds_3 includes pics 1, 5, 7, 8, 9, 10, 13, 14, 15, 16 and was sent to Marios for training

Model12:
-> started labelling glass in pics 10, 15 and disabled car-view for now
-> used those pics to train model12 (glass_ds_1)
-> 




Picture Reference:
pic1 = 100_0001 - half resolution
pic2 = 100_0005 - full resolution
pic3 = 100_0018 - full resolution
pic4 = 100_0005 - half resolution
pic5 = 100_0018 - half resolution
pic6 = 100_0022 - half resolution
pic7 = 100_0027 - half resolution
pic8 = 100_0037 - half resolution
pic9 = 100_0070 - half resolution
pic10 = 100_0078 - half resolution
pic11 = 100_0093 - half resolution
pic12 = 100_0114 - half resolution
pic13 = 100_0123 - half resolution
pic14 = 100_0141 - half resolution
pic15 = 100_0162 - half resolution
pic16 = 100_0195 - half resolution





Model Reference:
model1 (test_model_1) = 10 epoch/4 batch with all labels - took 5 minutes
			(bus, truck, car, person, tree, high tree)
model2 (test_model_2) = 50 epoch/4 batch with 2 labels - took 30 minutes
			(car, tree)
model3 (hd_model_1)   = 25 epoch/4 batch with 1 label - took 1 hour
			(car)
model4 (test_model_3) = 80 epoch/5 batch with 1 label - took 1 hour
			(car) - there were car groups
model5 (test_model_4) = 80 epoch/5 batch with 1 label - took 1 hour
			(car) - there were car groups
model6 (beta_model_1) = 100 epoch/5 batch with 1 label - took 1 hour
			(car)
model7 (beta_model_2) = 80 epoch/5 batch with 1 label - took 5 hours
			(car) - there were car groups
model8 (beta_model_3) = 60 epoch/4 batch with 1 label - took 3 hours
			(car)
model9 (beta_model_4) = 50 epoch/4 batch with 1 label - took 30 minutes
			(car)
model10 (test_model5) = 60 epoch/4 batch with 1 label - took 2 hours
			(car) - single whole cars only
model11 (beta_model5) = 500 epoch/8 batch with 1 label - overnight
			(car)
model12 (glass_model1) = 120 epoch/5 batch with 1 label - started 9:30
			(glass)